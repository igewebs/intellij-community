### auto-generated section `build` start
load("@rules_java//java:defs.bzl", "java_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")

java_library(
  name = "resources",
  resources = glob(["resources/**/*"])
)

kt_jvm_library(
  name = "build-tasks",
  module_name = "intellij.idea.community.build.tasks",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"]),
  javac_opts = "//:j17",
  kotlinc_opts = "//:k17",
  plugins = ["@libraries//:serialization_plugin"],
  deps = [
    "@libraries//:kotlin-stdlib",
    "@libraries//:kotlinx-serialization-core-jvm",
    "@libraries//:kotlinx-serialization-json-jvm",
    "@community//platform/util/zip:util-zip",
    "@libraries//:kotlinx-collections-immutable-jvm",
    "@libraries//:intellij-deps-fastutil",
    "@libraries//:opentelemetry-sdk",
    "@libraries//:opentelemetry-semconv",
    "@libraries//:jackson-jr-objects",
    "@libraries//:jackson-core",
    "@libraries//:kotlinx-coroutines-core-jvm",
    "@community//platform/util/rt-java8:util-rt-java8",
    "@community//java/java-runtime:java-rt",
    "@community//platform/util-rt",
    "@community//platform/diagnostic/telemetry:diagnostic-telemetry",
    "@community//platform/diagnostic/telemetry.exporters:diagnostic-telemetry-exporters",
    "@community//platform/build-scripts/downloader:buildScripts-downloader",
    "@libraries//:annotations",
    "@community//platform/util/base:util-base",
    "@libraries//:hash4j",
    "@libraries//:serviceMessages",
    "@libraries//:opentelemetry-extension-kotlin",
    "@libraries//:netty-buffer",
  ],
  runtime_deps = [
    ":resources",
    "@libraries//:slf4j-api",
    "@libraries//:slf4j-jdk14",
    "@libraries//:bcpkix-jdk18on",
  ]
)
### auto-generated section `build` end