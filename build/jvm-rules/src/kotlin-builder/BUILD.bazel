load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_jvm//:jvm.bzl", "jvm_import")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")

kt_jvm_library(
    name = "worker-lib",
    srcs = glob(["**/*.kt"]),
    deps = [
        "//:kotlin-compiler",
        "//:kotlin-build-tools-impl",
        "//src/worker-framework",
        "//src/jar",
        "//src/compiler-util",
        "//zip:build-zip",
        # we parse `jdeps` to support reduced classpath building and checking for unused deps
        # (both features are disabled by default for now)
        "@bazel_tools//src/main/protobuf:deps_java_proto",
        "//src/kotlin-plugins/jdeps",
        "//src/kotlin-plugins/abi",
        "//:kotlin-compose-compiler-plugin",
        "//:poko-compiler-plugin",
        "//:kotlin-serialization-compiler-plugin",
    ],
    visibility = ["//visibility:public"],
)

java_binary(
    name = "worker-jvm",
    runtime_deps = [":worker-lib"],
    main_class = "org.jetbrains.bazel.jvm.kotlin.KotlinBuildWorker",
    jvm_flags = [
        "-Xms1000m",
        "-Xmx6000m",
        "-Djava.awt.headless=true",
        "-Dapple.awt.UIElement=true",
        "-Dkotlin.environment.keepalive=true",
        # Kotlin Compiler sets it
        "-Didea.io.use.nio2=true",
        "-Dzip.handler.uses.crc.instead.of.timestamp=true",
    ],
    visibility = ["//visibility:public"],
)
