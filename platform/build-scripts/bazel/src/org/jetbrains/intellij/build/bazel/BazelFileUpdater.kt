// Copyright 2000-2024 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
package org.jetbrains.intellij.build.bazel

import java.nio.file.Files
import java.nio.file.Path

class BazelFileUpdater(private val file: Path) {
  private var fileContent: String = Files.readString(file)

  fun insertAutoGeneratedSection(sectionName: String, autoGeneratedContent: String) {
    val startToken = "### auto-generated section `$sectionName` start"
    val endToken = "### auto-generated section `$sectionName` end"

    val newSection = "\n$autoGeneratedContent"

    val startIndex = fileContent.indexOf(startToken)
    val endIndex = fileContent.indexOf(endToken)
    if (startIndex == -1 || endIndex == -1) {
      println("Section `$sectionName` doesn't exist in the file $file")
    }
    else {
      fileContent = fileContent.substring(0, startIndex + startToken.length) + newSection + fileContent.substring(endIndex)
    }
  }

  fun save() {
    if (runCatching { Files.readString(file) }.getOrNull() != fileContent) {
      Files.writeString(file, fileContent)
    }
  }
}