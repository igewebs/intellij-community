//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: embeddings.proto

package org.jetbrains.embeddings.local.server.stubs;

@kotlin.jvm.JvmSynthetic
public inline fun scoredEntry(block: org.jetbrains.embeddings.local.server.stubs.scored_entryKt.Dsl.() -> kotlin.Unit): org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry =
  org.jetbrains.embeddings.local.server.stubs.scored_entryKt.Dsl._create(org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry.newBuilder()).apply { block() }._build()
public object scored_entryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry = _builder.build()

    /**
     * <code>int64 id = 1;</code>
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>int64 id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>float distance = 2;</code>
     */
    public var distance: kotlin.Float
      @JvmName("getDistance")
      get() = _builder.getDistance()
      @JvmName("setDistance")
      set(value) {
        _builder.setDistance(value)
      }
    /**
     * <code>float distance = 2;</code>
     */
    public fun clearDistance() {
      _builder.clearDistance()
    }
  }
}
public inline fun org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry.copy(block: org.jetbrains.embeddings.local.server.stubs.scored_entryKt.Dsl.() -> kotlin.Unit): org.jetbrains.embeddings.local.server.stubs.Embeddings.scored_entry =
  org.jetbrains.embeddings.local.server.stubs.scored_entryKt.Dsl._create(this.toBuilder()).apply { block() }._build()
