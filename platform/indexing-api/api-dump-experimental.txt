*:com.intellij.find.TextSearchService
- s:getInstance():com.intellij.find.TextSearchService
- a:isInSearchableScope(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
- a:processFilesWithText(java.lang.String,com.intellij.util.Processor,com.intellij.psi.search.GlobalSearchScope):com.intellij.find.TextSearchService$TextSearchResult
*e:com.intellij.find.TextSearchService$TextSearchResult
- java.lang.Enum
- sf:FINISHED:com.intellij.find.TextSearchService$TextSearchResult
- sf:NO_TRIGRAMS:com.intellij.find.TextSearchService$TextSearchResult
- sf:STOPPED:com.intellij.find.TextSearchService$TextSearchResult
- s:valueOf(java.lang.String):com.intellij.find.TextSearchService$TextSearchResult
- s:values():com.intellij.find.TextSearchService$TextSearchResult[]
*:com.intellij.model.search.CodeReferenceSearcher
- sf:EP_NAME:com.intellij.openapi.extensions.ExtensionPointName
- a:getReferences(com.intellij.model.Symbol,com.intellij.model.search.LeafOccurrence):java.util.Collection
- a:getReferencingLanguage(com.intellij.model.Symbol):com.intellij.lang.Language
- a:getSearchRequest(com.intellij.openapi.project.Project,com.intellij.model.Symbol):com.intellij.model.search.SearchRequest
*:com.intellij.model.search.LeafOccurrence
- component1():com.intellij.psi.PsiElement
- component2():com.intellij.psi.PsiElement
- component3():I
- a:getOffsetInStart():I
- a:getScope():com.intellij.psi.PsiElement
- a:getStart():com.intellij.psi.PsiElement
*:com.intellij.model.search.LeafOccurrenceMapper
- a:mapOccurrence(com.intellij.model.search.LeafOccurrence):java.util.Collection
- s:withPointer(com.intellij.model.Pointer,com.intellij.model.search.LeafOccurrenceMapper$Parameterized):com.intellij.model.search.LeafOccurrenceMapper
*:com.intellij.model.search.LeafOccurrenceMapper$Parameterized
- a:mapOccurrence(java.lang.Object,com.intellij.model.search.LeafOccurrence):java.util.Collection
*:com.intellij.model.search.PsiSymbolDeclarationSearcher
- com.intellij.model.search.Searcher
*e:com.intellij.model.search.SearchContext
- java.lang.Enum
- sf:IN_CODE:com.intellij.model.search.SearchContext
- sf:IN_CODE_HOSTS:com.intellij.model.search.SearchContext
- sf:IN_COMMENTS:com.intellij.model.search.SearchContext
- sf:IN_PLAIN_TEXT:com.intellij.model.search.SearchContext
- sf:IN_STRINGS:com.intellij.model.search.SearchContext
- s:mask(java.util.Collection):S
- s:valueOf(java.lang.String):com.intellij.model.search.SearchContext
- s:values():com.intellij.model.search.SearchContext[]
*:com.intellij.model.search.SearchParameters
- a:areValid():Z
- a:getProject():com.intellij.openapi.project.Project
*:com.intellij.model.search.SearchService
- s:getInstance():com.intellij.model.search.SearchService
- a:merge(java.util.List):com.intellij.util.Query
- a:searchParameters(com.intellij.model.search.SearchParameters):com.intellij.util.Query
- a:searchPsiSymbolDeclarations(com.intellij.openapi.project.Project,com.intellij.model.Symbol,com.intellij.psi.search.SearchScope):com.intellij.util.Query
- a:searchPsiSymbolReferences(com.intellij.openapi.project.Project,com.intellij.model.Symbol,com.intellij.psi.search.SearchScope):com.intellij.util.Query
- a:searchWord(com.intellij.openapi.project.Project,java.lang.String):com.intellij.model.search.SearchWordQueryBuilder
*:com.intellij.model.search.SearchWordQueryBuilder
- a:buildLeafOccurrenceQuery():com.intellij.util.Query
- a:buildOccurrenceQuery():com.intellij.util.Query
- a:buildQuery(com.intellij.model.search.LeafOccurrenceMapper):com.intellij.util.Query
- a:caseSensitive(Z):com.intellij.model.search.SearchWordQueryBuilder
- a:inContexts(com.intellij.model.search.SearchContext,com.intellij.model.search.SearchContext[]):com.intellij.model.search.SearchWordQueryBuilder
- a:inContexts(java.util.Set):com.intellij.model.search.SearchWordQueryBuilder
- a:inFilesWithLanguage(com.intellij.lang.Language):com.intellij.model.search.SearchWordQueryBuilder
- a:inFilesWithLanguageOfKind(com.intellij.lang.Language):com.intellij.model.search.SearchWordQueryBuilder
- a:inInjections():com.intellij.model.search.SearchWordQueryBuilder
- a:inInjections(com.intellij.lang.Language):com.intellij.model.search.SearchWordQueryBuilder
- a:inInjectionsOfKind(com.intellij.lang.Language):com.intellij.model.search.SearchWordQueryBuilder
- a:inScope(com.intellij.psi.search.SearchScope):com.intellij.model.search.SearchWordQueryBuilder
- a:includeInjections():com.intellij.model.search.SearchWordQueryBuilder
- a:restrictFileTypes(com.intellij.openapi.fileTypes.FileType,com.intellij.openapi.fileTypes.FileType[]):com.intellij.model.search.SearchWordQueryBuilder
- a:withContainerName(java.lang.String):com.intellij.model.search.SearchWordQueryBuilder
*:com.intellij.model.search.Searcher
- collectImmediateResults(com.intellij.model.search.SearchParameters):java.util.Collection
- collectSearchRequest(com.intellij.model.search.SearchParameters):com.intellij.util.Query
- collectSearchRequests(com.intellij.model.search.SearchParameters):java.util.Collection
*:com.intellij.model.search.TextOccurrence
- a:getElement():com.intellij.psi.PsiElement
- a:getOffsetInElement():I
- s:of(com.intellij.psi.PsiElement,I):com.intellij.model.search.TextOccurrence
f:com.intellij.psi.search.FileTypeIndex
- *sf:INDEX_CHANGE_TOPIC:com.intellij.util.messages.Topic
*:com.intellij.psi.search.FileTypeIndex$IndexChangeListener
- a:onChangedForFileType(com.intellij.openapi.fileTypes.FileType):V
f:com.intellij.psi.search.IndexPattern
- *:getWordToHighlight():java.lang.String
a:com.intellij.psi.stubs.StubIndex
- *a:getMaxContainingFileCount(com.intellij.psi.stubs.StubIndexKey,java.lang.Object,com.intellij.openapi.project.Project,com.intellij.psi.search.GlobalSearchScope):I
*Fa:com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
- com.intellij.openapi.project.RootsChangeRescanningInfo
- a:addInheritedSdk():com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
- a:addLibrary(com.intellij.openapi.roots.libraries.Library):com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
- a:addModule(com.intellij.openapi.module.Module):com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
- a:addSdk(com.intellij.openapi.projectRoots.Sdk):com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
- a:buildInfo():com.intellij.openapi.project.RootsChangeRescanningInfo
- s:newInstance():com.intellij.util.indexing.BuildableRootsChangeRescanningInfo
*:com.intellij.util.indexing.CompositeDataIndexer
- com.intellij.util.indexing.DataIndexer
- a:calculateSubIndexer(com.intellij.util.indexing.IndexedFile):java.lang.Object
- a:getSubIndexerVersion(java.lang.Object):java.lang.Object
- a:getSubIndexerVersionDescriptor():com.intellij.util.io.KeyDescriptor
- map(com.intellij.util.indexing.FileContent):java.util.Map
- a:map(com.intellij.util.indexing.FileContent,java.lang.Object):java.util.Map
- requiresContentForSubIndexerEvaluation(com.intellij.util.indexing.IndexedFile):Z
*c:com.intellij.util.indexing.DefaultFileTypeSpecificWithProjectInputFilter
- com.intellij.util.indexing.FileBasedIndex$FileTypeSpecificInputFilter
- com.intellij.util.indexing.FileBasedIndex$ProjectSpecificInputFilter
- <init>(com.intellij.openapi.fileTypes.FileType[]):V
- acceptInput(com.intellij.util.indexing.IndexedFile):Z
- registerFileTypesUsedForIndexing(com.intellij.util.Consumer):V
Fa:com.intellij.util.indexing.FileBasedIndex
- *a:getContainingFilesIterator(com.intellij.util.indexing.ID,java.lang.Object,com.intellij.psi.search.GlobalSearchScope):java.util.Iterator
- *:ignoreDumbMode(com.intellij.util.indexing.DumbModeAccessType,com.intellij.openapi.util.ThrowableComputable):java.lang.Object
- *:ignoreDumbMode(com.intellij.util.indexing.DumbModeAccessType,java.lang.Runnable):V
- *:processFilesContainingAllKeys(java.util.Collection,com.intellij.psi.search.GlobalSearchScope,com.intellij.util.Processor):Z
*f:com.intellij.util.indexing.FileBasedIndex$AllKeysQuery
- <init>(com.intellij.util.indexing.ID,java.util.Collection,com.intellij.openapi.util.Condition):V
- getDataKeys():java.util.Collection
- getIndexId():com.intellij.util.indexing.ID
- getValueChecker():com.intellij.openapi.util.Condition
*:com.intellij.util.indexing.FileBasedIndex$ProjectSpecificInputFilter
- com.intellij.util.indexing.FileBasedIndex$InputFilter
- acceptInput(com.intellij.openapi.vfs.VirtualFile):Z
- a:acceptInput(com.intellij.util.indexing.IndexedFile):Z
a:com.intellij.util.indexing.FileBasedIndexExtension
- com.intellij.util.indexing.IndexExtension
- *:canBeShared():Z
a:com.intellij.util.indexing.IndexableSetContributor
- *:acceptFile(com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.vfs.VirtualFile,com.intellij.openapi.project.Project):Z
*:com.intellij.util.indexing.hints.FileTypeIndexingHint
- a:acceptsFileTypeFastPath(com.intellij.openapi.fileTypes.FileType):com.intellij.util.ThreeState
- a:slowPathIfFileTypeHintUnsure(com.intellij.util.indexing.IndexedFile):Z
*:com.intellij.util.indexing.roots.IndexableFilesContributor
- a:getIndexableFiles(com.intellij.openapi.project.Project):java.util.List
- a:getOwnFilePredicate(com.intellij.openapi.project.Project):java.util.function.Predicate
*:com.intellij.util.indexing.roots.IndexableFilesIterator
- a:getDebugName():java.lang.String
- a:getIndexingProgressText():java.lang.String
- a:getOrigin():com.intellij.util.indexing.roots.kind.IndexableSetOrigin
- a:getRootUrls(com.intellij.openapi.project.Project):java.util.Set
- a:getRootsScanningProgressText():java.lang.String
- a:iterateFiles(com.intellij.openapi.project.Project,com.intellij.openapi.roots.ContentIterator,com.intellij.openapi.vfs.VirtualFileFilter):Z
*:com.intellij.util.indexing.roots.kind.ContentOrigin
- com.intellij.util.indexing.roots.kind.IndexableSetOrigin
*:com.intellij.util.indexing.roots.kind.IndexableSetOrigin
*:com.intellij.util.indexing.roots.kind.ProjectFileOrDirOrigin
- com.intellij.util.indexing.roots.kind.IndexableSetOrigin
- a:getFileOrDir():com.intellij.openapi.vfs.VirtualFile
