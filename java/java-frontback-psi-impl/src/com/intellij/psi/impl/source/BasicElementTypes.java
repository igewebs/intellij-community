// Copyright 2000-2023 JetBrains s.r.o. and contributors. Use of this source code is governed by the Apache 2.0 license.
package com.intellij.psi.impl.source;

import com.intellij.psi.JavaDocTokenType;
import com.intellij.psi.JavaTokenType;

public interface BasicElementTypes extends JavaTokenType, JavaDocTokenType, BasicJavaElementType, BasicJavaDocElementType {

  BasicJavaTokenSet JAVA_PLAIN_COMMENT_BIT_SET = BasicJavaTokenSet.create(END_OF_LINE_COMMENT, C_STYLE_COMMENT);
  BasicJavaTokenSet JAVA_COMMENT_BIT_SET =
    BasicJavaTokenSet.orSet(JAVA_PLAIN_COMMENT_BIT_SET, BasicJavaTokenSet.create(DOC_COMMENT));
  BasicJavaTokenSet JAVA_COMMENT_OR_WHITESPACE_BIT_SET =
    BasicJavaTokenSet.orSet(BasicJavaTokenSet.create(WHITE_SPACE), JAVA_COMMENT_BIT_SET);

  BasicJavaTokenSet KEYWORD_BIT_SET = BasicJavaTokenSet.create(
    ABSTRACT_KEYWORD, ASSERT_KEYWORD, BOOLEAN_KEYWORD, BREAK_KEYWORD, BYTE_KEYWORD, CASE_KEYWORD, CATCH_KEYWORD, CHAR_KEYWORD,
    CLASS_KEYWORD, CONST_KEYWORD, CONTINUE_KEYWORD, DEFAULT_KEYWORD, DO_KEYWORD, DOUBLE_KEYWORD, ELSE_KEYWORD, ENUM_KEYWORD,
    EXTENDS_KEYWORD, FINAL_KEYWORD, FINALLY_KEYWORD, FLOAT_KEYWORD, FOR_KEYWORD, GOTO_KEYWORD, IF_KEYWORD, IMPLEMENTS_KEYWORD,
    IMPORT_KEYWORD, INSTANCEOF_KEYWORD, INT_KEYWORD, INTERFACE_KEYWORD, LONG_KEYWORD, NATIVE_KEYWORD, NEW_KEYWORD, PACKAGE_KEYWORD,
    PRIVATE_KEYWORD, PROTECTED_KEYWORD, PUBLIC_KEYWORD, RETURN_KEYWORD, SHORT_KEYWORD, SUPER_KEYWORD, STATIC_KEYWORD, STRICTFP_KEYWORD,
    SWITCH_KEYWORD, SYNCHRONIZED_KEYWORD, THIS_KEYWORD, THROW_KEYWORD, THROWS_KEYWORD, TRANSIENT_KEYWORD, TRY_KEYWORD, VOID_KEYWORD,
    VOLATILE_KEYWORD, WHILE_KEYWORD,
    OPEN_KEYWORD, MODULE_KEYWORD, REQUIRES_KEYWORD, EXPORTS_KEYWORD, OPENS_KEYWORD, USES_KEYWORD, PROVIDES_KEYWORD,
    TRANSITIVE_KEYWORD, TO_KEYWORD, WITH_KEYWORD, VAR_KEYWORD, YIELD_KEYWORD, RECORD_KEYWORD, SEALED_KEYWORD, PERMITS_KEYWORD,
    NON_SEALED_KEYWORD, WHEN_KEYWORD
  );

  BasicJavaTokenSet LITERAL_BIT_SET = BasicJavaTokenSet.create(TRUE_KEYWORD, FALSE_KEYWORD, NULL_KEYWORD);

  BasicJavaTokenSet OPERATION_BIT_SET = BasicJavaTokenSet.create(
    EQ, GT, LT, EXCL, TILDE, QUEST, COLON, PLUS, MINUS, ASTERISK, DIV, AND, OR, XOR,
    PERC, EQEQ, LE, GE, NE, ANDAND, OROR, PLUSPLUS, MINUSMINUS, LTLT, GTGT, GTGTGT,
    PLUSEQ, MINUSEQ, ASTERISKEQ, DIVEQ, ANDEQ, OREQ, XOREQ, PERCEQ, LTLTEQ, GTGTEQ, GTGTGTEQ);

  BasicJavaTokenSet MODIFIER_BIT_SET = BasicJavaTokenSet.create(
    PUBLIC_KEYWORD, PROTECTED_KEYWORD, PRIVATE_KEYWORD, STATIC_KEYWORD, ABSTRACT_KEYWORD, FINAL_KEYWORD, NATIVE_KEYWORD,
    SYNCHRONIZED_KEYWORD, STRICTFP_KEYWORD, TRANSIENT_KEYWORD, VOLATILE_KEYWORD, DEFAULT_KEYWORD, SEALED_KEYWORD, NON_SEALED_KEYWORD);

  BasicJavaTokenSet PRIMITIVE_TYPE_BIT_SET = BasicJavaTokenSet.create(
    BOOLEAN_KEYWORD, BYTE_KEYWORD, SHORT_KEYWORD, INT_KEYWORD, LONG_KEYWORD, CHAR_KEYWORD, FLOAT_KEYWORD, DOUBLE_KEYWORD, VOID_KEYWORD);

  BasicJavaTokenSet EXPRESSION_BIT_SET = BasicJavaTokenSet.create(
    BASIC_REFERENCE_EXPRESSION, BASIC_LITERAL_EXPRESSION, BASIC_THIS_EXPRESSION, BASIC_SUPER_EXPRESSION,
    BASIC_PARENTH_EXPRESSION, BASIC_METHOD_CALL_EXPRESSION,
    BASIC_TYPE_CAST_EXPRESSION, BASIC_PREFIX_EXPRESSION, BASIC_POSTFIX_EXPRESSION, BASIC_BINARY_EXPRESSION,
    BASIC_POLYADIC_EXPRESSION, BASIC_CONDITIONAL_EXPRESSION,
    BASIC_ASSIGNMENT_EXPRESSION, BASIC_NEW_EXPRESSION, BASIC_ARRAY_ACCESS_EXPRESSION,
    BASIC_ARRAY_INITIALIZER_EXPRESSION, BASIC_INSTANCE_OF_EXPRESSION,
    BASIC_CLASS_OBJECT_ACCESS_EXPRESSION, BASIC_METHOD_REF_EXPRESSION, BASIC_LAMBDA_EXPRESSION, BASIC_SWITCH_EXPRESSION,
    BASIC_EMPTY_EXPRESSION,
    BASIC_TEMPLATE_EXPRESSION);

  BasicJavaTokenSet ANNOTATION_MEMBER_VALUE_BIT_SET =
    BasicJavaTokenSet.orSet(EXPRESSION_BIT_SET, BasicJavaTokenSet.create(BASIC_ANNOTATION,
                                                                         BASIC_ANNOTATION_ARRAY_INITIALIZER));

  BasicJavaTokenSet ARRAY_DIMENSION_BIT_SET = BasicJavaTokenSet.create(
    BASIC_REFERENCE_EXPRESSION, BASIC_LITERAL_EXPRESSION, BASIC_THIS_EXPRESSION, BASIC_SUPER_EXPRESSION,
    BASIC_PARENTH_EXPRESSION, BASIC_METHOD_CALL_EXPRESSION,
    BASIC_TYPE_CAST_EXPRESSION, BASIC_PREFIX_EXPRESSION, BASIC_POSTFIX_EXPRESSION, BASIC_BINARY_EXPRESSION,
    BASIC_POLYADIC_EXPRESSION, BASIC_CONDITIONAL_EXPRESSION,
    BASIC_ASSIGNMENT_EXPRESSION, BASIC_NEW_EXPRESSION, BASIC_ARRAY_ACCESS_EXPRESSION, BASIC_INSTANCE_OF_EXPRESSION,
    BASIC_CLASS_OBJECT_ACCESS_EXPRESSION,
    BASIC_EMPTY_EXPRESSION);

  BasicJavaTokenSet JAVA_STATEMENT_BIT_SET = BasicJavaTokenSet.create(
    BASIC_EMPTY_STATEMENT, BASIC_BLOCK_STATEMENT, BASIC_EXPRESSION_STATEMENT, BASIC_EXPRESSION_LIST_STATEMENT,
    BASIC_DECLARATION_STATEMENT, BASIC_IF_STATEMENT,
    BASIC_WHILE_STATEMENT, BASIC_FOR_STATEMENT, BASIC_FOREACH_STATEMENT, BASIC_DO_WHILE_STATEMENT,
    BASIC_SWITCH_STATEMENT, BASIC_SWITCH_LABEL_STATEMENT, BASIC_BREAK_STATEMENT,
    BASIC_CONTINUE_STATEMENT, BASIC_RETURN_STATEMENT, BASIC_THROW_STATEMENT, BASIC_SYNCHRONIZED_STATEMENT,
    BASIC_TRY_STATEMENT, BASIC_LABELED_STATEMENT, BASIC_ASSERT_STATEMENT,
    BASIC_YIELD_STATEMENT);

  BasicJavaTokenSet JAVA_PATTERN_BIT_SET =
    BasicJavaTokenSet.create(BASIC_TYPE_TEST_PATTERN, BASIC_PARENTHESIZED_PATTERN, BASIC_DECONSTRUCTION_PATTERN, BASIC_UNNAMED_PATTERN);

  BasicJavaTokenSet JAVA_CASE_LABEL_ELEMENT_BIT_SET =
    BasicJavaTokenSet.orSet(JAVA_PATTERN_BIT_SET, EXPRESSION_BIT_SET, BasicJavaTokenSet.create(
      BASIC_DEFAULT_CASE_LABEL_ELEMENT));

  BasicJavaTokenSet JAVA_MODULE_STATEMENT_BIT_SET = BasicJavaTokenSet.create(
    BASIC_REQUIRES_STATEMENT, BASIC_EXPORTS_STATEMENT, BASIC_OPENS_STATEMENT, BASIC_USES_STATEMENT,
    BASIC_PROVIDES_STATEMENT);

  BasicJavaTokenSet IMPORT_STATEMENT_BASE_BIT_SET = BasicJavaTokenSet.create(BASIC_IMPORT_STATEMENT,
                                                                             BASIC_IMPORT_STATIC_STATEMENT);
  BasicJavaTokenSet CLASS_KEYWORD_BIT_SET =
    BasicJavaTokenSet.create(CLASS_KEYWORD, INTERFACE_KEYWORD, ENUM_KEYWORD, RECORD_KEYWORD);
  BasicJavaTokenSet MEMBER_BIT_SET = BasicJavaTokenSet.create(BASIC_CLASS, BASIC_FIELD, BASIC_ENUM_CONSTANT,
                                                              BASIC_METHOD, BASIC_ANNOTATION_METHOD);
  BasicJavaTokenSet FULL_MEMBER_BIT_SET = BasicJavaTokenSet.orSet(MEMBER_BIT_SET, BasicJavaTokenSet.create(
    BASIC_CLASS_INITIALIZER));

  BasicJavaTokenSet INTEGER_LITERALS = BasicJavaTokenSet.create(INTEGER_LITERAL, LONG_LITERAL);
  BasicJavaTokenSet REAL_LITERALS = BasicJavaTokenSet.create(FLOAT_LITERAL, DOUBLE_LITERAL);
  BasicJavaTokenSet STRING_LITERALS = BasicJavaTokenSet.create(STRING_LITERAL, TEXT_BLOCK_LITERAL);
  BasicJavaTokenSet TEXT_LITERALS = BasicJavaTokenSet.create(STRING_LITERAL, TEXT_BLOCK_LITERAL, CHARACTER_LITERAL);

  BasicJavaTokenSet STRING_TEMPLATE_FRAGMENTS =
    BasicJavaTokenSet.create(STRING_TEMPLATE_BEGIN, STRING_TEMPLATE_MID, STRING_TEMPLATE_END,
                             TEXT_BLOCK_TEMPLATE_BEGIN, TEXT_BLOCK_TEMPLATE_MID, TEXT_BLOCK_TEMPLATE_END);

  BasicJavaTokenSet ALL_LITERALS =
    BasicJavaTokenSet.orSet(INTEGER_LITERALS, REAL_LITERALS, TEXT_LITERALS, LITERAL_BIT_SET);
}
